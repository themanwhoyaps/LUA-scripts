-- what are these called again
local Debris = game:GetService("Debris")

-- more boring variables lol
local killerfolder = workspace.Players.Killers
local survivorfolder = workspace.Players.Survivors
local ingamefolder = workspace.Map.Ingame
local killerESPWatch
local survivorESPWatch
local miscESPWatch
local fillTransparency = 0.5
local existingHighlights = {}

-- functions lol

local function highlightObject(object : Instance, objType : string)
	local newKillerHighlight = Instance.new("Highlight")
	local newFloatGUI = Instance.new("BillboardGui")
	local newTextlabel = Instance.new("TextLabel")

	-- different modes for different modes lol
	if objType == "evil" then
		newFloatGUI.Parent = object:WaitForChild("HumanoidRootPart")
		newFloatGUI.StudsOffset = Vector3.new(0, 3.5, 0)
	elseif objType == "cool" then
		newFloatGUI.Parent = object:WaitForChild("HumanoidRootPart")
		newFloatGUI.StudsOffset = Vector3.new(0, 3.5, 0)

	elseif objType == "misc" then
		newFloatGUI.Parent = object
		if object:IsA("Model") then
			if object.Name == "Map" then
				return
			end
			local objcframe, objsize = object:GetBoundingBox()
			newFloatGUI.StudsOffset = Vector3.new(0, objsize.Y + 1, 0)
		else
			newFloatGUI.StudsOffset = Vector3.new(0, 3.5, 0)
		end

	end 

	newFloatGUI.Name = "espBillboard"
	newKillerHighlight.Parent = object
	table.insert(existingHighlights, newKillerHighlight)
	print(existingHighlights)

	newFloatGUI.Size = UDim2.new(50, 0, 1.5, 0)
	newFloatGUI.AlwaysOnTop = true

	newTextlabel.Size = UDim2.new(1, 0, 1, 0)
	newTextlabel.FontFace.Bold = true
	newTextlabel.TextScaled = true
	newTextlabel.BackgroundTransparency = 1
	newTextlabel.TextStrokeTransparency = 0
	newTextlabel.FontFace = Font.fromName("Roboto", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
	newTextlabel.Text = object.Name

	if objType == "misc" then
		newKillerHighlight.Name = "mehHighlightLMAO"
		newKillerHighlight.FillColor = Color3.fromRGB(208, 208, 208)
		newKillerHighlight.OutlineColor = Color3.fromRGB(153, 153, 153)

		newTextlabel.TextColor3 = Color3.fromRGB(198, 198, 198)
	elseif objType == "evil" then
		newKillerHighlight.Name = "evilHighlightLMAO"
		newKillerHighlight.FillColor = Color3.fromRGB(208, 0, 0)
		newKillerHighlight.OutlineColor = Color3.fromRGB(153, 1, 1)

		newTextlabel.TextColor3 = Color3.fromRGB(225, 93, 95)
	elseif objType == "cool" then
		newKillerHighlight.Name = "coolHighlightLMAO"
		newKillerHighlight.FillColor = Color3.fromRGB(132, 132, 0)
		newKillerHighlight.OutlineColor = Color3.fromRGB(199, 189, 52)

		newTextlabel.TextColor3 = Color3.fromRGB(255, 242, 58)
	end
	
	newKillerHighlight.Destroying:Once(function()
		table.remove(existingHighlights, table.find(existingHighlights, newKillerHighlight))	
	end)
end

local function Relocate()
	-- animation: 140042539182927
	local STUNTIME = 2.5

	local Character = game.Players.LocalPlayer.Character
	local SpawnPoints = ingamefolder:FindFirstChild("Map"):WaitForChild("SpawnPoints"):WaitForChild("Survivors"):GetChildren()
	local goalspawnpoint = SpawnPoints[math.random(1, #SpawnPoints)]

	local humanoid = Character:FindFirstChild("Humanoid")
	local hrp = Character:FindFirstChild("HumanoidRootPart")
	local animator = humanoid:WaitForChild("Animator")
	local sfx = Instance.new("Sound")
	local tempanimObject = Instance.new("Animation")

	tempanimObject.Parent = humanoid
	tempanimObject.AnimationId = "rbxassetid://140042539182927"
	Debris:AddItem(tempanimObject, 5)
	sfx.Name = "fakeTPSFX"
	sfx.Parent = hrp
	sfx.SoundId = "rbxassetid://125253972523701"
	Debris:AddItem(sfx, 10)
	local tpTrack = animator:LoadAnimation(tempanimObject)

	-- halt player
	local folderSpeed = Character:FindFirstChild("SpeedMultipliers")
	if folderSpeed ~= nil then
		local newHaltNumberValue = Instance.new("NumberValue")
		Debris:AddItem(newHaltNumberValue, STUNTIME)
		newHaltNumberValue.Parent = folderSpeed
		newHaltNumberValue.Name = "bwahahaISortaBalancedThisXD"
	end

	tpTrack:Play()
	sfx:Play()

	task.spawn(function()
		task.wait(STUNTIME)
		tpTrack:Stop()
	end)

	task.wait(1.5)

	Character:MoveTo(goalspawnpoint.Position)
end

-- setup yawn

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
	Name = "Forsaken Whatever",
	Icon = "scroll-text", -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
	LoadingTitle = "Believe in these lies",
	LoadingSubtitle = "XD",
	ShowText = "the scripts :?", -- for mobile users to unhide rayfield, change if you'd like
	Theme = "DarkBlue", -- Check https://docs.sirius.menu/rayfield/configuration/themes

	ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

	DisableRayfieldPrompts = false,
	DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
})

if game.PlaceId ~= 18687417158 then
	Rayfield:Notify({
		Title = "Forsaken Whatever",
		Content = "Unsupported game!!1!, Shutting down...",
		Duration = 3,
		Image = "triangle-alert",
	})
	task.wait(3)
	Rayfield:Destroy()
	return
end

-- ui setup (yawn)

local sf = Window:CreateTab("Safe Functions", "square-plus") -- safe functions
local uf = Window:CreateTab("Unsafe Functions", "square-minus") -- unsafe functions

local ufWarningSection = uf:CreateSection("These functions have a greater risk of getting reported and banned! Use at your own risk.")
local sfWarningSection = sf:CreateSection("These functions are undetectable and not easy to get banned with.")

-- // objects for Safe Functions //

local fillTransparency = sf:CreateSlider({
	Name = "Highlight Fill Transparency",
	Range = {0, 1},
	Increment = 0.1,
	Suffix = "Transparency",
	CurrentValue = 0.5,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		fillTransparency = Value
	end,
})

local killerESP = sf:CreateToggle({
	Name = "Highlight killer(s)",
	CurrentValue = false,
	Flag = "Toggle1",
	Callback = function(Value)
		if Value then
			for i, killerChar in killerfolder:GetChildren() do
				highlightObject(killerChar, "evil")
			end
			
			killerESPWatch = killerfolder.ChildAdded:Connect(function(object)
				highlightObject(object, "evil")
			end)
		else
			if killerESPWatch then
				killerESPWatch:Disconnect()
				killerESPWatch = nil
			end
			
			for i, v in killerfolder:GetDescendants() do
				if v.Name == "evilHighlightLMAO" or v.Name == "espBillboard" then
					v:Destroy()
				end
			end
		end
	end,
})

local survivorESP = sf:CreateToggle({
	Name = "Highlight survivors",
	CurrentValue = false,
	Flag = "Toggle1",
	Callback = function(Value)
		if Value then
			for i, survivorChar in survivorfolder:GetChildren() do
				highlightObject(survivorChar, "cool")
			end

			survivorESPWatch = survivorfolder.ChildAdded:Connect(function(object)
				highlightObject(object, "cool")
			end)
		else
			if survivorESPWatch then
				survivorESPWatch:Disconnect()
				survivorESPWatch = nil
			end

			for i, v in survivorfolder:GetDescendants() do
				if v.Name == "coolHighlightLMAO" or v.Name == "espBillboard" then
					v:Destroy()
				end
			end
		end
		
	end,
})

local miscESP = sf:CreateToggle({
	Name = "Highlight misc",
	CurrentValue = false,
	Flag = "Toggle1",
	Callback = function(Value)
		if Value then
			for i, randomObj in ingamefolder:GetChildren() do
				highlightObject(randomObj, "misc")
			end

			miscESPWatch = ingamefolder.ChildAdded:Connect(function(object)
				highlightObject(object, "misc")
			end)
		else
			if miscESPWatch then
				miscESPWatch:Disconnect()
				miscESPWatch = nil
			end

			for i, v in ingamefolder:GetDescendants() do
				if v.Name == "mehHighlightLMAO" or v.Name == "espBillboard" then
					v:Destroy()
				end
			end
		end

	end,
})

-- // objects for unsafe functions //

local relocateButton = uf:CreateButton({
	Name = "Relocate",
	Callback = function()
		Relocate()
	end,
})

local relocateKeybind = uf:CreateKeybind({
	Name = "Relocate Keybind",
	CurrentKeybind = "T",
	HoldToInteract = false,
	Flag = "Keybind1",
	Callback = function(Keybind)
		Relocate()
	end,
})
