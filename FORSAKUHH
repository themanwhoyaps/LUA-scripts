local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
	Name = "Forfreaky gui [1.2]",
	LoadingTitle = "Frontflips are lame",
	LoadingSubtitle = "By @ThemanWhoYaps",
	ConfigurationSaving = {
		Enabled = false,
		FolderName = nil, 
		FileName = "Example Hub"
	},
	Discord = {
		Enabled = false,
		Invite = "noinvitelink", 
		RememberJoins = true 
	},
	KeySystem = false, 
	KeySettings = {
		Title = "Key | Youtube Hub",
		Subtitle = "Key System",
		Note = "Key In Discord Server",
		FileName = "YoutubeHubKey1",
		SaveKey = false,
		GrabKeyFromSite = true, 
		Key = {"https://pastebin.com/raw/AtgzSPWK"} 
	}
})

-- VARIABLES
local Killerfolder = workspace.Players.Killers
local Survivorfolder = workspace.Players.Survivors
localcharacter = game.Players.LocalPlayer.Character
ShootButton = LocalPlayer.PlayerGui.MainUI.AbilityContainer:FindFirstChild("Shoot")
LocalPlayer = game:GetService("Players").LocalPlayer
Mouse = LocalPlayer:GetMouse()
togglekilleresp = false
togglesurvivoresp = false
toggleaimbot = false

-- FUNCTIONS
function redefinecharacter()
	localcharacter = game.Players.LocalPlayer.Character
	ShootButton = LocalPlayer.PlayerGui.MainUI.AbilityContainer:FindFirstChild("Shoot")
	LocalPlayer = game:GetService("Players").LocalPlayer
	Mouse = LocalPlayer:GetMouse()
end

function chanceaimbot()
	redefinecharacter()
	if toggleaimbot == true then
		if ShootButton:FindFirstChild("NoCharges") == nil then
			print("clicked")
			for i = 0, 30, 1 do
				task.wait(0)
				for i, v in Killerfolder:GetChildren() do
					local HRP = v:FindFirstChild("HumanoidRootPart")
					local MHRP = localcharacter:FindFirstChild("HumanoidRootPart")
					MHRP.CFrame = CFrame.lookAt(MHRP.Position, HRP.Position)
				end
			end
		end
	end
end

local Troll = Window:CreateTab("Trolls", "banana")
local Use = Window:CreateTab("Actual Cheats", "cuboid")

local trollabel = Troll:CreateSection("Trolling, all buttons made by me :D")

local ButtonRun = Troll:CreateButton({
	Name = "Pathfinding Sprint",
	Callback = function()
		local isspeed = false
		local char = game.Players.LocalPlayer.Character

		local PathfindingService = game:GetService("PathfindingService")
		local TweenService = game:GetService("TweenService")
		local Debris = game:GetService("Debris")
		local Players = game:GetService("Players")
		local Camera = game.Workspace.Camera

		local player = Players.LocalPlayer

		local mouse = player:GetMouse()
		local map = workspace.Map.Ingame.Map

		Camera.CameraType = Enum.CameraType.Scriptable
		local CameraPart = Instance.new("Part")
		Debris:AddItem(CameraPart, 2)
		CameraPart.CFrame = map.WorldPivot
		CameraPart.Position = CameraPart.Position + Vector3.new(0, 200, 0)
		CameraPart.Orientation = Vector3.new(-90, 0, 0)
		CameraPart.CanCollide = false
		CameraPart.Anchored = true
		CameraPart.Parent = game.Workspace

		local goal = {}
		goal.CFrame = CameraPart.CFrame

		local tweenInfo = TweenInfo.new(
			0.5, -- Time
			Enum.EasingStyle.Cubic, -- EasingStyle
			Enum.EasingDirection.Out, -- EasingDirection
			0, -- RepeatCount (when less than zero the tween will loop indefinitely)
			false, -- Reverses (tween will reverse once reaching its goal)
			0 -- DelayTime
		)

		local tween = TweenService:Create(Camera, tweenInfo, goal)
		tween:Play()

		local fog = game:GetService("Lighting"):FindFirstChild("Atmosphere")
		if fog == nil then

		else
			fog.Parent = game.Workspace
		end

		local Outline = Instance.new("Highlight")
		Outline.FillColor = Color3.new(0, 1, 0)
		Outline.FillTransparency = 0.85
		Outline.Parent = char
		
		Rayfield:Notify({
			Title = "Info",
			Content = "Click/Tap a surface to run to it.",
			Duration = 5,
			Image = "lightbulb",
		})

		connection = mouse.Button1Down:Connect(function()
			connection:Disconnect()
			local mousepos = mouse.Hit.Position
			local Marker = Instance.new("Part")
			Marker.Size = Vector3.new(10, 10, 10)
			Marker.Transparency = 1
			Marker.Shape = "Ball"
			Marker.Position = mousepos
			Marker.Material = "Neon"
			Marker.CanCollide = false
			Marker.Anchored = true
			Marker.Parent = game.Workspace

			local goal = {}
			goal.Size = Vector3.new(1, 1, 1)
			goal.Transparency = 0

			local tweenInfo = TweenInfo.new(
				1, -- Time
				Enum.EasingStyle.Cubic, -- EasingStyle
				Enum.EasingDirection.Out, -- EasingDirection
				0, -- RepeatCount (when less than zero the tween will loop indefinitely)
				false, -- Reverses (tween will reverse once reaching its goal)
				0 -- DelayTime
			)

			local tween = TweenService:Create(Marker, tweenInfo, goal)
			tween:Play()

			local humanoid = char:WaitForChild("Humanoid")
			local goalPart = Marker

			local path = PathfindingService:CreatePath()

			local success, errorMessage = pcall(function()
				path:ComputeAsync(char.PrimaryPart.Position, goalPart.Position)
			end)

			if success then
				isspeed = true
				for _,waypoint in pairs(path:GetWaypoints()) do
					char.SpeedMultipliers.Sprinting.Value = 5
					humanoid:MoveTo(waypoint.Position)
					humanoid.MoveToFinished:Wait()
				end
			end

			Camera.CameraType = Enum.CameraType.Custom
			Marker:Destroy()
			Outline:Destroy()
			fog.Parent = game.Lighting
			char.SpeedMultipliers.Sprinting.Value = 1
		end)
	end,
})






local Uselabel = Use:CreateSection("Actually useful stuff, all buttons & toggles made by me :D")

local Toggle0 = Use:CreateToggle({
	Name = "Highlight Killer(s)",
	CurrentValue = false,
	Flag = "KILLERESP", 
	Callback = function(Value)
		togglekilleresp = not togglekilleresp
		if togglekilleresp == true then
			local Killers = Killerfolder:GetChildren()
			for i, v in Killers do
				local outline = Instance.new("Highlight")
				outline.FillColor = Color3.new(1, 0.447059, 0.454902)
				outline.FillTransparency = 0.7
				outline.OutlineColor = Color3.new(0.356863, 0, 0.00784314)
				outline.Name = "ESPHIGHLIGHT"
				outline.Parent = v
			end			
		end
		while nil == nil do
			if togglekilleresp == true then
				task.wait(0)
			else
				local Killers = Killerfolder:GetChildren()
				for i, v in Killers do
					local found = v:FindFirstChild("ESPHIGHLIGHT")
					if found ~= nil then
						found:Destroy()
					end
				end	
				break
			end
		end
	end,
})

Killerfolder.ChildAdded:Connect(function(child)
	if togglekilleresp == true then
		local outline = Instance.new("Highlight")
		outline.FillColor = Color3.new(1, 0.447059, 0.454902)
		outline.FillTransparency = 0.7
		outline.OutlineColor = Color3.new(0.356863, 0, 0.00784314)
		outline.Name = "ESPHIGHLIGHT"
		outline.Parent = child
	end
end)

local Toggle1 = Use:CreateToggle({
	Name = "Highlight Survivors(s)",
	CurrentValue = false,
	Flag = "SURVIVORESP", 
	Callback = function(Value)
		togglesurvivoresp = not togglesurvivoresp
		if togglesurvivoresp == true then
			local Survivors = Survivorfolder:GetChildren()
			for i, v in Survivors do
				local outline = Instance.new("Highlight")
				outline.FillColor = Color3.new(0.631373, 1, 0.435294)
				outline.FillTransparency = 0.7
				outline.OutlineColor = Color3.new(0.105882, 0.356863, 0)
				outline.Name = "ESPHIGHLIGHT-S"
				outline.Parent = v
			end			
		end
		while nil == nil do
			if togglesurvivoresp == true then
				task.wait(0)
			else
				local Survivors = Survivorfolder:GetChildren()
				for i, v in Survivors do
					local found = v:FindFirstChild("ESPHIGHLIGHT-S")
					if found ~= nil then
						found:Destroy()
					end
				end	
				break
			end
		end
	end,
})

Survivorfolder.ChildAdded:Connect(function(child)
	if togglesurvivoresp == true then
		local outline = Instance.new("Highlight")
		outline.FillColor = Color3.new(0.631373, 1, 0.435294)
		outline.FillTransparency = 0.7
		outline.OutlineColor = Color3.new(0.105882, 0.356863, 0)
		outline.Name = "ESPHIGHLIGHT-S"
		outline.Parent = child
	end
end)

local ToggleChanceAimbot = Use:CreateToggle({
	Name = "Aimbot (Chance)",
	CurrentValue = false,
	Flag = "LOOKATKILLERS", 
	Callback = function(Value)
		toggleaimbot = not toggleaimbot
	end,
})

ShootButton = LocalPlayer.PlayerGui.MainUI.AbilityContainer:FindFirstChild("Shoot")

ShootButton.MouseButton1Click:Connect(function()
	chanceaimbot()
end)

game:GetService("UserInputService").InputBegan:Connect(function(input)
	if input.KeyCode == Enum.KeyCode.E then
		print("key E pressed")
		chanceaimbot()
	end
end)
