local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
	Name = "Today were going to do a little trolling",
	Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
	LoadingTitle = "TSB troll scripts",
	LoadingSubtitle = "by ThemanWhoYaps",
	Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

	DisableRayfieldPrompts = false,
	DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

	ConfigurationSaving = {
		Enabled = false,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Big Hub"
	},

	Discord = {
		Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
		Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
		RememberJoins = true -- Set this to false to make them join the discord every time they load it up
	},

	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
		Title = "Untitled",
		Subtitle = "Key System",
		Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
		FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
		SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
	}
})

target_name = "Weakest Dummy"

function checktargetplayer()
	if workspace.Live:FindFirstChild(target_name) == nil then
		Rayfield:Notify({
			Title = "Player specified does not exist.",
			Content = "Maybe check for stupidly complicated characters in the username.",
			Duration = 5,
			Image = 10724129940,
		})
	end
end

function tpto(targettp, i)
	local offsetCFrame = CFrame.new(0, 2 - i, 3)
	lc.HumanoidRootPart.CFrame = targettp.HumanoidRootPart.CFrame:ToWorldSpace(offsetCFrame)
	lc.HumanoidRootPart.CFrame *= CFrame.fromEulerAngles(0, 0, 9.5)
	lc.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
end

function tptoserious(targettp)
	local offsetCFrame = CFrame.new(0, 20, 0)
	lc.HumanoidRootPart.CFrame = targettp.HumanoidRootPart.CFrame:ToWorldSpace(offsetCFrame)
	lc.HumanoidRootPart.CFrame *= CFrame.fromEulerAngles(0, 0, 9.5)
	lc.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
end

function shovetp()
	checktargetplayer()
	for indexi = 0, 2, 0.05 do
		tpto(target, indexi)
		task.wait(0)
		if indexi == 0 then
			local shovecommands = {
				[1] = {
					["Tool"] = game:GetService("Players").LocalPlayer.Backpack.Shove,
					["Goal"] = "Console Move",
					["ToolName"] = "Shove"
				}
			}

			game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(shovecommands))
		end
	end
end

function nptp()
	checktargetplayer()
	for indexi = 0, 2.5, 0.05 do
		tpto(target, indexi)
		task.wait(0)
		if indexi == 0 then
			local normalpunchcommands = {
				[1] = {
					["Tool"] = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Normal Punch"),
					["Goal"] = "Console Move",
					["ToolName"] = "Normal Punch"
				}
			}

			game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(normalpunchcommands))

		end
	end
end

function punchestp()
	checktargetplayer()
	for indexi = 0, 3, 0.05 do
		tpto(target, indexi)
		task.wait(0)
		if indexi == 0 then
			local consecutivepunchescommands = {
				[1] = {
					["Tool"] = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Consecutive Punches"),
					["Goal"] = "Console Move",
					["ToolName"] = "Consecutive Punches"
				}
			}

			game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(consecutivepunchescommands))

		end
	end
end

function uppercuttp()
	checktargetplayer()
	for indexi = 0, 2, 0.05 do
		tpto(target, indexi)
		task.wait(0)
		if indexi == 0 then
			local uppercutdata = {
				[1] = {
					["Tool"] = game:GetService("Players").LocalPlayer.Backpack.Uppercut,
					["Goal"] = "Console Move"
				}
			}

			game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(uppercutdata))

		end
	end
end
	
function seriouspunchtp()
	checktargetplayer()
	for indexi = 0, 500, 1 do
		tptoserious(target)
		task.wait(0)
		if indexi == 0 then
			local seriouspunch = {
				[1] = {
					["Tool"] = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Serious Punch"),
					["Goal"] = "Console Move"
				}
			}

			game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(seriouspunch))

		end
	end
end	

-- GUI ELEMENTS //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

local skilless = Window:CreateTab("Base Moveset", 112168009464658)
local funnyman = Window:CreateTab("Ultimate Moveset", 112168009464658)

local Input = skilless:CreateInput({
	Name = "Target player name",
	CurrentValue = "Weakest Dummy",
	PlaceholderText = "@username btw",
	RemoveTextAfterFocusLost = false,
	Flag = "Input1",
	Callback = function(Text)
		target_name = Text
	end,
})

local Divider = skilless:CreateDivider()

local Button = skilless:CreateButton({
	Name = "Normal Punch",
	Callback = function()
		target = workspace.Live:FindFirstChild(target_name)
		lc = game:GetService("Players").LocalPlayer.Character
		nptp()
	end,
})

local Button = skilless:CreateButton({
	Name = "Consecutive",
	Callback = function()
		target = workspace.Live:FindFirstChild(target_name)
		lc = game:GetService("Players").LocalPlayer.Character
		punchestp()
	end,
})

local Button = skilless:CreateButton({
	Name = "Shove",
	Callback = function()
		target = workspace.Live:FindFirstChild(target_name)
		lc = game:GetService("Players").LocalPlayer.Character
		shovetp()
	end,
})

local Button = skilless:CreateButton({
	Name = "Uppercut",
	Callback = function()
		target = workspace.Live:FindFirstChild(target_name)
		lc = game:GetService("Players").LocalPlayer.Character
		uppercuttp()
	end,
})



local Button = funnyman:CreateButton({
	Name = "Serious Punch",
	Callback = function()
		target = workspace.Live:FindFirstChild(target_name)
		lc = game:GetService("Players").LocalPlayer.Character
		seriouspunchtp()
	end,
})
